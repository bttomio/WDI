labs(
title = "An Example of Hans Rosling's Gapminder using WDI",
x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank"
) +
geom_text_repel(data = subset(hrg2, life_exp > 75 || life_exp < 55),
aes(x = gdp_capita, y = life_exp, label = country.x),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
ggplot(hrg2) +
geom_point(
aes(
x = gdp_capita,
y = life_exp,
size = pop,
color = region
)
) +
scale_x_continuous(
labels = scales::dollar_format(),
breaks = scales::log_breaks(n = 10)
) +
coord_trans(x = 'log10') +
scale_size_continuous(
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)
) +
theme_minimal() +
labs(
title = "An Example of Hans Rosling's Gapminder using WDI",
x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank"
) +
geom_text_repel(data = subset(hrg2, life_exp > 75 | life_exp < 55),
aes(x = gdp_capita, y = life_exp, label = country.x),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
ggplot(hrg2) +
geom_point(
aes(
x = gdp_capita,
y = life_exp,
size = pop,
color = region
)
) +
scale_x_continuous(
labels = scales::dollar_format(),
breaks = scales::log_breaks(n = 10)
) +
coord_trans(x = 'log10') +
scale_size_continuous(
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)
) +
theme_minimal() +
labs(
title = "An Example of Hans Rosling's Gapminder using WDI",
x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank"
) +
geom_text_repel(data = subset(hrg2, life_exp > 85 | life_exp < 55),
aes(x = gdp_capita, y = life_exp, label = country.x),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
ggplot(hrg2) +
geom_point(
aes(
x = gdp_capita,
y = life_exp,
size = pop,
color = region
)
) +
scale_x_continuous(
labels = scales::dollar_format(),
breaks = scales::log_breaks(n = 10)
) +
coord_trans(x = 'log10') +
scale_size_continuous(
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)
) +
theme_minimal() +
labs(
title = "An Example of Hans Rosling's Gapminder using WDI",
x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank"
) +
geom_text_repel(data = subset(hrg2, life_exp > 80 | life_exp < 55),
aes(x = gdp_capita, y = life_exp, label = country.x),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
options(htmltools.dir.version = FALSE)
library(WDI)
library(dplyr)
library(rnaturalearth)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(ggrepel)
hrg2 <- hrg %>%
left_join(Data_countries, "iso2c") %>%
filter(region != "Aggregates") # remove aggregates (groups of countries)
ggplot(hrg2) +
geom_point(
aes(x = gdp_capita, y = life_exp, size = pop, color = region)) +
scale_x_continuous(
labels = scales::dollar_format(),
breaks = scales::log_breaks(n = 10)) +
coord_trans(x = 'log10') +
scale_size_continuous(
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)) +
theme_minimal() +
labs(x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank")
View(hrg2)
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)) +
theme_minimal() +
labs(x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank") +
geom_label_repel(data = subset(hrg2, pop > 90000000), # 90 millions
aes(x = gdp_capita, y = life_exp, label = country.x),
box.padding   = 0.9,
point.padding = 0.9,
segment.color = 'grey50')
ggplot(hrg2) +
geom_point(
aes(x = gdp_capita, y = life_exp, size = pop, color = region)) +
scale_x_continuous(
labels = scales::dollar_format(),
breaks = scales::log_breaks(n = 10)) +
coord_trans(x = 'log10') +
scale_size_continuous(
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)) +
theme_minimal() +
labs(x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank") +
geom_label_repel(data = subset(hrg2, pop > 90000000), # 90 millions
aes(x = gdp_capita, y = life_exp, label = country.x),
box.padding   = 0.9,
point.padding = 0.9,
segment.color = 'grey50')
View(hrg2)
source('~/GitHub/WDI/Card image - Twitter.R', echo=TRUE)
neededpkgs <- c('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel')
if (!require(neededpkgs))
install.packages(neededpkgs);
if (!require('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel'))
install.packages('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel');
if (!require('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel')) install.packages('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel');
if (!require('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel')) install.packages('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel');
if (!require(c('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel'))) install.packages('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel');
list.of.packages <- c('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel')
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(list.of.packages)
library(list.of.packages, character.only = T)
list.of.packages <- c('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel')
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(list.of.packages, character.only = T)
lapply(list.of.packages, library, character.only = T)
list.of.packages <- c('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel')
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only = T)
lapply(list.of.packages, library, character.only = T, quietly = T)
source('~/GitHub/WDI/Hands-on.R', echo=TRUE)
# GDP per capita for France and Brazil
ggplot(dat1, aes(year, `GDP per capita`, color=country)) + geom_line() +
xlab('Year') + ylab('GDP per capita')
# GDP per capita (US$ and local currency unity) for France and Brazil
ggplot(dat2, aes(year, color=country)) +
geom_line(aes(year, `GDP per capita (US$)`)) +
geom_line(aes(year, `GDP per capita (LCU)`), linetype = "dashed") +
xlab('Year') + ylab('GDP per capita') +
labs(caption = "GDP per capita (US$), solid; GDP per capita (LCU), dashed") +
theme_economist() +
scale_colour_economist()
library(dplyr)
Data_countries <- as.data.frame(Data_info$country)
Data_countries %>%
kable("html") %>%
kable_styling(font_size = 11) %>%
scroll_box(width = "100%", height = "60%")
list.of.packages <- c('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel')
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only = T, quietly = T)
# Self-employed in 2019
indicator <- c("Self-employed" = 'SL.EMP.SELF.ZS')
datW <- WDI(indicator, country="all", start = 2019, end = 2019)
Data_info <- WDI_data
name_self_employed <- as.data.frame(Data_info$series) %>%
filter(indicator == "SL.EMP.SELF.ZS") %>%
select(name)
source_self_employed <- as.data.frame(Data_info$series) %>%
filter(indicator == "SL.EMP.SELF.ZS") %>%
select(sourceOrganization)
ne_countries(returnclass = "sf") %>%
left_join(datW, c("iso_a2" = "iso2c")) %>%
filter(iso_a2 != "ATA") %>% # remove Antarctica
ggplot(aes(fill = `Self-employed`)) +
geom_sf() +
scale_fill_viridis_c(labels = scales::percent_format(scale = 1)) +
theme(legend.position="bottom") +
labs(
title = name_self_employed,
fill = NULL,
caption = paste("Source:", source_self_employed)
)
# Self-employed in 2008
indicator <- c("Self-employed" = 'SL.EMP.SELF.ZS')
datW <- WDI(indicator, country="all", start = 2008, end = 2008)
Data_info <- WDI_data
name_self_employed <- as.data.frame(Data_info$series) %>%
filter(indicator == "SL.EMP.SELF.ZS") %>%
select(name)
source_self_employed <- as.data.frame(Data_info$series) %>%
filter(indicator == "SL.EMP.SELF.ZS") %>%
select(sourceOrganization)
ne_countries(returnclass = "sf") %>%
left_join(datW, c("iso_a2" = "iso2c")) %>%
filter(iso_a2 != "ATA") %>% # remove Antarctica
ggplot(aes(fill = `Self-employed`)) +
geom_sf() +
scale_fill_viridis_c(labels = scales::percent_format(scale = 1)) +
theme(legend.position="bottom") +
labs(
title = name_self_employed,
fill = NULL,
caption = paste("Source:", source_self_employed)
)
# Self-employed in 1991
indicator <- c("Self-employed" = 'SL.EMP.SELF.ZS')
datW <- WDI(indicator, country="all", start = 1991, end = 1991)
Data_info <- WDI_data
name_self_employed <- as.data.frame(Data_info$series) %>%
filter(indicator == "SL.EMP.SELF.ZS") %>%
select(name)
source_self_employed <- as.data.frame(Data_info$series) %>%
filter(indicator == "SL.EMP.SELF.ZS") %>%
select(sourceOrganization)
ne_countries(returnclass = "sf") %>%
left_join(datW, c("iso_a2" = "iso2c")) %>%
filter(iso_a2 != "ATA") %>% # remove Antarctica
ggplot(aes(fill = `Self-employed`)) +
geom_sf() +
scale_fill_viridis_c(labels = scales::percent_format(scale = 1)) +
theme(legend.position="bottom") +
labs(
title = name_self_employed,
fill = NULL,
caption = paste("Source:", source_self_employed)
)
ne_countries(returnclass = "sf") %>%
left_join(datW, c("iso_a2" = "iso2c")) %>%
filter(iso_a2 != "ATA") %>% # remove Antarctica
ggplot(aes(fill = `Self-employed`)) +
geom_sf() +
scale_fill_viridis_c(labels = scales::percent_format(scale = 1)) +
theme(legend.position="bottom") +
labs(
title = name_self_employed,
fill = NULL,
caption = paste("Source:", source_self_employed)
)
# Self-employed in 1991
indicator <- c("Self-employed" = 'SL.EMP.SELF.ZS')
datW <- WDI(indicator, country="all", start = 1991, end = 1991)
Data_info <- WDI_data
name_self_employed <- as.data.frame(Data_info$series) %>%
filter(indicator == "SL.EMP.SELF.ZS") %>%
select(name)
source_self_employed <- as.data.frame(Data_info$series) %>%
filter(indicator == "SL.EMP.SELF.ZS") %>%
select(sourceOrganization)
ne_countries(returnclass = "sf") %>%
left_join(datW, c("iso_a2" = "iso2c")) %>%
filter(iso_a2 != "ATA") %>% # remove Antarctica
ggplot(aes(fill = `Self-employed`)) +
geom_sf() +
scale_fill_viridis_c(labels = scales::percent_format(scale = 1)) +
theme(legend.position="bottom") +
labs(
title = name_self_employed,
fill = NULL,
caption = paste("Source:", source_self_employed)
)
# GDP per capita (constant 2010 US$) in 2019
indicator <- c("GDP per capita" = 'NY.GDP.PCAP.KD')
datW <- WDI(indicator, country="all", start = 2019, end = 2019)
Data_info <- WDI_data
name_GDP_PC <- as.data.frame(Data_info$series) %>%
filter(indicator == "NY.GDP.PCAP.KD") %>%
select(name)
source_GDP_PC <- as.data.frame(Data_info$series) %>%
filter(indicator == "NY.GDP.PCAP.KD") %>%
select(sourceOrganization)
ne_countries(returnclass = "sf") %>%
left_join(datW, c("iso_a2" = "iso2c")) %>%
filter(iso_a2 != "ATA") %>% # remove Antarctica
ggplot(aes(fill = `GDP per capita`)) +
geom_sf() +
scale_fill_viridis_c(labels = scales::dollar_format(scale = 1)) +
theme(legend.position="bottom", legend.key.width = unit(2.5, "cm")) +
labs(
title = name_GDP_PC,
fill = NULL,
caption = paste("Source:", source_GDP_PC)
)
# Search for "unemployment"
WDIsearch('unemployment')
# Save results for "unemployment"
UNEMP_search <- WDIsearch('unemployment')
# Unemployment rate,Percent,,, in February 2020 - Global Economic Monitor
indicator <- c("Unemployment" = 'UNEMPSA_')
datW <- WDI(indicator, country="all",start = '2020M02', end = '2020M02')
Data_info <- WDI_data
name_UNEMP <- as.data.frame(Data_info$series) %>%
filter(indicator == "UNEMPSA_") %>%
select(name)
ne_countries(returnclass = "sf") %>%
left_join(datW, c("iso_a3" = "iso2c")) %>%
filter(iso_a2 != "ATA") %>% # remove Antarctica
ggplot(aes(fill = `Unemployment`)) +
geom_sf() +
scale_fill_viridis_c(labels = scales::percent_format(scale = 1)) +
theme(legend.position="bottom") +
labs(
title = paste0(name_UNEMP, " in February 2020"),
fill = NULL,
caption = "Source: Global Economic Monitor, World Bank"
)
# Search for "life"
WDIsearch('life')
# Save results for "life"
life_search <- WDIsearch('life')
# Life expectancy at birth, female (years) in 2018
indicator <- c("Life expectancy at birth, female (years)" = 'SP.DYN.LE00.FE.IN')
datW <- WDI(indicator, country="all",start = '2018', end = '2018')
Data_info <- WDI_data
name_life <- as.data.frame(Data_info$series) %>%
filter(indicator == "SP.DYN.LE00.FE.IN") %>%
select(name)
source_life <- as.data.frame(Data_info$series) %>%
filter(indicator == "SP.DYN.LE00.FE.IN") %>%
select(sourceOrganization)
ne_countries(returnclass = "sf") %>%
left_join(datW, c("iso_a2" = "iso2c")) %>%
filter(iso_a2 != "ATA") %>% # remove Antarctica
ggplot(aes(fill = `Life expectancy at birth, female (years)`)) +
geom_sf() +
scale_fill_viridis_c(labels = scales::number_format(scale = 1)) +
theme(legend.position="bottom") +
labs(
title = name_life,
fill = NULL,
caption = paste("Source:", source_life)
)
list.of.packages <- c('WDI', 'dplyr', 'ggplot2', 'ggthemes', 'knitr', 'kableExtra', 'rnaturalearth', 'tidyverse', 'ggrepel')
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, library, character.only = T, quietly = T)
indicators <- c(life_exp = "SP.DYN.LE00.IN",
gdp_capita ="NY.GDP.PCAP.CD",
pop = "SP.POP.TOTL")
hrg <- WDI(indicators, country="all", start = "2018", end = "2018")
Data_info <- WDI_data
Data_countries <- as.data.frame(Data_info$country)
hrg %>%
left_join(Data_countries, "iso2c") %>%
filter(region != "Aggregates") %>% # remove aggregates (groups of countries)
ggplot() +
geom_point(aes(x = gdp_capita, y = life_exp, size = pop, color = region)) +
scale_x_continuous(
labels = scales::dollar_format(),
breaks = scales::log_breaks(n = 10)) +
coord_trans(x = 'log10') +
scale_size_continuous(
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)) +
theme_minimal() +
labs(title = "An Example of Hans Rosling's Gapminder using WDI (Data for 2018)",
x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank")
hrg2 <- hrg %>%
left_join(Data_countries, "iso2c") %>%
filter(region != "Aggregates") # remove aggregates (groups of countries)
ggplot(hrg2) +
geom_point(
aes(x = gdp_capita, y = life_exp, size = pop, color = region)) +
scale_x_continuous(
labels = scales::dollar_format(),
breaks = scales::log_breaks(n = 10)) +
coord_trans(x = 'log10') +
scale_size_continuous(
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)) +
theme_minimal() +
labs(x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank") +
geom_label_repel(data = subset(hrg2, life_exp > 84 | life_exp < 55),
aes(x = gdp_capita, y = life_exp, label = country.x),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
ggplot(hrg2) +
geom_point(
aes(x = gdp_capita, y = life_exp, size = pop, color = region)) +
scale_x_continuous(
labels = scales::dollar_format(),
breaks = scales::log_breaks(n = 10)) +
coord_trans(x = 'log10') +
scale_size_continuous(
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)) +
theme_minimal() +
labs(x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank") +
geom_label_repel(data = subset(hrg2, pop > 900000), # 90 millions
aes(x = gdp_capita, y = life_exp, label = country.x),
box.padding   = 0.9,
point.padding = 0.9,
segment.color = 'grey50')
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)) +
theme_minimal() +
labs(x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank") +
geom_label_repel(data = subset(hrg2, pop > 90000000), # 90 millions
aes(x = gdp_capita, y = life_exp, label = country.x),
box.padding   = 0.9,
point.padding = 0.9,
segment.color = 'grey50')
ggplot(hrg2) +
geom_point(
aes(x = gdp_capita, y = life_exp, size = pop, color = region)) +
scale_x_continuous(
labels = scales::dollar_format(),
breaks = scales::log_breaks(n = 10)) +
coord_trans(x = 'log10') +
scale_size_continuous(
labels = scales::number_format(scale = 1/1e6, suffix = "m"),
breaks = seq(1e8,1e9, 2e8),
range = c(1,20)) +
theme_minimal() +
labs(x = "GDP per capita (log scale)",
y = "Life expectancy at birth",
size = "Population",
color = NULL,
caption = "Source: World Bank") +
geom_label_repel(data = subset(hrg2, pop > 90000000), # 90 millions
aes(x = gdp_capita, y = life_exp, label = country.x),
box.padding   = 0.9,
point.padding = 0.9,
segment.color = 'grey50')
xaringan::decktape("C:/Portfolio/my site/public/slides/carrytradetomiovallet.html", "C:/Portfolio/my site/public/slides/YSI Virtual Plenary - 2020.pdf", docker = F)
xaringan::decktape("./Slides.html", "./Slides.pdf", docker = F)
PRINT OK = xaringan::decktape("./Slides.html", "./Slides.pdf", docker = F)
xaringan::decktape("./Slides.html", "./Slides.pdf", docker = F)
